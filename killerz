#include "monty.h"

/**
 * execute - Executes the opcode
 * @content: Line content from the Monty bytecode file
 * @stack: Pointer to the stack
 * @counter: Line number in the Monty bytecode file
 * @doc: File pointer to the Monty bytecode file
 * Return: Always returns 0
 */
int execute(char *content, stack_t **stack, unsigned int counter, FILE *doc)
{
    instruction_t opst[] = {
        {"push", opcode_push},
        {"pall", opcode_pall},
        {NULL, NULL}
    };
    unsigned int i = 0;
    char *op;

    op = strtok(content, " \n\t");
    if (op && op[0] == '#')
        return (0);
    monty_data._args = strtok(NULL, " \n\t");
    while (opst[i].opcode && op)
    {
        if (strcmp(op, opst[i].opcode) == 0)
        {
            opst[i].f(stack, counter);
            return (0);
        }
        i++;
    }
    if (op && opst[i].opcode == NULL)
    {
        fprintf(stderr, "L%d: unknown instruction %s\n", counter, op);
        fclose(doc);
        free(content);
        empty_stack(*stack);
        exit(EXIT_FAILURE);
    }
    return (1);
}
